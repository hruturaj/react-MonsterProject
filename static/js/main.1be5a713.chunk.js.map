{"version":3,"sources":["components/card/card.components.jsx","components/card-list/card-list.components.jsx","components/search-box/search-box.components.jsx","components/title/title.components.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","type","placeholder","onChange","handleChange","Title","children","App","e","setState","searchValue","target","value","state","monstersList","fetch","then","response","json","users","this","monsterFilter","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mVAIaA,EAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEL,sBAAKJ,UAAU,YAAf,UACE,mCAAMD,EAAMI,QAAQE,KAApB,OACA,kCAAKN,EAAMI,QAAQG,MAAnB,cCRKC,G,MAAW,SAACR,GACvB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAACN,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCLdM,G,MAAY,SAACX,GACxB,OACE,uBACEC,UAAU,SACVW,KAAK,SACLC,YAAab,EAAMa,YACnBC,SAAUd,EAAMe,iBCNTC,G,MAAQ,SAAChB,GACpB,OAAO,qBAAIC,UAAU,QAAd,cAAwBD,EAAMiB,SAA9B,SCuCMC,E,kDArCb,aAAe,IAAD,8BACZ,gBAcFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXC,aAAc,GACdJ,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBK,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKV,SAAS,CAAEK,aAAcK,S,oBAOnD,WAAU,IAAD,EAC+BC,KAAKP,MAAnCC,EADD,EACCA,aAAcJ,EADf,EACeA,YAClBW,EAAgBP,EAAaQ,QAAO,SAAC7B,GACvC,OAAOA,EAAQE,KAAK4B,cAAcC,SAASd,EAAYa,kBAEzD,OACE,sBAAKjC,UAAU,MAAf,UACE,cAAC,EAAD,iCACA,cAAC,EAAD,CACEY,YAAY,kBACZE,aAAcgB,KAAKhB,eAErB,cAAC,EAAD,CAAUN,SAAUuB,W,GAhCVI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1be5a713.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./card.style.css\";\r\n\r\nexport const Card = (props) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img\r\n        alt=\"monster\"\r\n        src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n      ></img>\r\n      <div className=\"card-text\">\r\n        <h2> {props.monster.name} </h2>\r\n        <p> {props.monster.email} </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Card } from \"../card/card.components.jsx\";\r\n\r\nimport \"./card-list.style.css\";\r\n\r\nexport const CardList = (props) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.monsters.map((monster) => (\r\n        <Card key={monster.id} monster={monster}></Card>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./search-box.style.css\";\r\n\r\nexport const SearchBox = (props) => {\r\n  return (\r\n    <input\r\n      className=\"search\"\r\n      type=\"search\"\r\n      placeholder={props.placeholder}\r\n      onChange={props.handleChange}\r\n    ></input>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./title.style.css\";\r\n\r\nexport const Title = (props) => {\r\n  return <h1 className=\"title\"> {props.children} </h1>;\r\n};\r\n","import \"./App.css\";\nimport { Component } from \"react\";\nimport { CardList } from \"./components/card-list/card-list.components.jsx\";\nimport { SearchBox } from \"./components/search-box/search-box.components.jsx\";\nimport { Title } from \"./components/title/title.components.jsx\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monstersList: [],\n      searchValue: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monstersList: users }));\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchValue: e.target.value });\n  };\n\n  render() {\n    const { monstersList, searchValue } = this.state;\n    var monsterFilter = monstersList.filter((monster) => {\n      return monster.name.toLowerCase().includes(searchValue.toLowerCase());\n    });\n    return (\n      <div className=\"App\">\n        <Title> Monsters Rodolex </Title>\n        <SearchBox\n          placeholder=\"Search Monsters\"\n          handleChange={this.handleChange}\n        ></SearchBox>\n        <CardList monsters={monsterFilter}></CardList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}